{"version":3,"file":"index-DchS6CFt.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/Navigation.jsx","../../src/components/Header.jsx","../../src/components/Footer.jsx","../../src/components/Dashboard.jsx","../../src/components/CollisionAvoidance.jsx","../../src/components/TrackDetection.jsx","../../src/components/AlertManagement.jsx","../../src/components/Controller.jsx","../../src/hooks/useAppData.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\r\n * @license React\r\n * react-jsx-runtime.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\r\n}\r\n","'use strict';\r\n\r\nvar m = require('react-dom');\r\nif (process.env.NODE_ENV === 'production') {\r\n  exports.createRoot = m.createRoot;\r\n  exports.hydrateRoot = m.hydrateRoot;\r\n} else {\r\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n  exports.createRoot = function(c, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.createRoot(c, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n  exports.hydrateRoot = function(c, h, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.hydrateRoot(c, h, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n}\r\n","import React from 'react'\r\n\r\nconst Navigation = ({ tabs, currentTab, onTabChange }) => {\r\n  // Function to get icon based on tab id\r\n  const getTabIcon = (tabId) => {\r\n    switch(tabId) {\r\n      case 'dashboard':\r\n        return '📊 ';\r\n      case 'collision':\r\n        return '🚨 ';\r\n      case 'detection':\r\n        return '🔍 ';\r\n      case 'alerts':\r\n        return '⚠️ ';\r\n      case 'controller':\r\n        return '🎮 ';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav-tabs\">\r\n      <div className=\"container\">\r\n        {tabs.map(tab => (\r\n          <button\r\n            key={tab.id}\r\n            className={`nav-tab ${currentTab === tab.id ? 'active' : ''}`}\r\n            onClick={() => onTabChange(tab.id)}\r\n          >\r\n            <span className=\"tab-icon\">{getTabIcon(tab.id)}</span>\r\n            {tab.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport Navigation from './Navigation'\r\n\r\nconst Header = ({ appData, tabs, currentTab, onTabChange }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-section\">\r\n            <h1>\r\n              <span className=\"logo-icon\"></span> Suraksha\r\n            </h1>\r\n            <p className=\"subtitle\">AI Railway Safety Module - GatiRakshak System</p>\r\n          </div>\r\n          <div className=\"header-stats\">\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-value\">{appData.metrics.activeTrains}</span>\r\n              <span className=\"stat-label\">Active Trains</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-value status--success\">Online</span>\r\n              <span className=\"stat-label\">System Status</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Navigation tabs={tabs} currentTab={currentTab} onTabChange={onTabChange} />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"footer-content\">\r\n          <div className=\"footer-section\">\r\n            <h4>About Suraksha</h4>\r\n            <p>A cutting-edge AI-powered railway safety solution by GatiRakshak, ensuring safe and efficient rail operations across India.</p>\r\n          </div>\r\n          \r\n          <div className=\"footer-section\">\r\n            <h4>Quick Links</h4>\r\n            <ul className=\"footer-links\">\r\n              <li><a href=\"#dashboard\">Dashboard</a></li>\r\n              <li><a href=\"#safety\">Safety Features</a></li>\r\n              <li><a href=\"#support\">Support</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"footer-section\">\r\n            <h4>Contact</h4>\r\n            <ul className=\"footer-contact\">\r\n              <li>📍 Rail Bhavan, New Delhi</li>\r\n              <li>📞 Emergency: 1800-111-139</li>\r\n              <li>✉️ support@gatirakshak.in</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"footer-section\">\r\n            <h4>Railway Safety Stats</h4>\r\n            <ul className=\"footer-stats\">\r\n              <li>🚉 10,000+ Stations Protected</li>\r\n              <li>🛤️ 50,000+ km Track Coverage</li>\r\n              <li>🚨 99.9% Alert Accuracy</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"footer-bottom\">\r\n          <p>&copy; 2025 GatiRakshak - Suraksha. All rights reserved.</p>\r\n          <div className=\"footer-bottom-links\">\r\n            <a href=\"#privacy\">Privacy Policy</a>\r\n            <a href=\"#terms\">Terms of Service</a>\r\n            <a href=\"#sitemap\">Sitemap</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Dashboard = ({ appData, updateMetrics }) => {\r\n  const recentAlerts = appData.alerts.slice(0, 3)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Portal Description */}\r\n      <section className=\"portal-description\">\r\n        <div className=\"container\">\r\n          <div className=\"description-content\">\r\n            <h2>Proactive Collision Avoidance System</h2>\r\n            <p>\r\n              Suraksha is a cutting-edge AI-powered safety module of the GatiRakshak system \r\n              designed for Indian Railways. It provides continuous monitoring and proactive \r\n              collision prevention through advanced artificial intelligence.\r\n            </p>\r\n            <div className=\"feature-grid\">\r\n              <div className=\"feature-item\">\r\n                <div className=\"feature-icon\">🛑</div>\r\n                <h3>Automatic Braking</h3>\r\n                <p>Instantly applies emergency brakes when collision risks are detected</p>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <div className=\"feature-icon\">👁️</div>\r\n                <h3>Track Monitoring</h3>\r\n                <p>Detects track defects and obstacles through integrated camera systems</p>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <div className=\"feature-icon\">⚡</div>\r\n                <h3>Real-time Alerts</h3>\r\n                <p>Sends immediate notifications to maintenance teams and control centers</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"dashboard-grid\">\r\n        {/* Live Metrics */}\r\n      <div className=\"card metrics-card\">\r\n        <div className=\"card__header\">\r\n          <h3>Live Railway Metrics</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"metrics-grid\">\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value\">{appData.metrics.activeTrains}</div>\r\n              <div className=\"metric-label\">Active Trains</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value status--warning\">{appData.metrics.safetyAlerts}</div>\r\n              <div className=\"metric-label\">Safety Alerts</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value status--success\">{appData.metrics.systemUptime}</div>\r\n              <div className=\"metric-label\">System Uptime</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value status--info\">{appData.metrics.incidentsPrevented}</div>\r\n              <div className=\"metric-label\">Incidents Prevented</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Track Status Map */}\r\n      <div className=\"card map-card\">\r\n        <div className=\"card__header\">\r\n          <h3>Track Section Status</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"track-map\">\r\n            <div className=\"track-section status-safe\" data-section=\"A\">\r\n              <span className=\"section-label\">Section A</span>\r\n              <div className=\"train-icon\">🚄</div>\r\n            </div>\r\n            <div className=\"track-section status-warning\" data-section=\"B\">\r\n              <span className=\"section-label\">Section B</span>\r\n              <div className=\"alert-badge\">⚠️</div>\r\n            </div>\r\n            <div className=\"track-section status-safe\" data-section=\"C\">\r\n              <span className=\"section-label\">Section C</span>\r\n              <div className=\"train-icon\">🚄</div>\r\n            </div>\r\n            <div className=\"track-section status-critical\" data-section=\"D\">\r\n              <span className=\"section-label\">Section D</span>\r\n              <div className=\"alert-badge\">🚨</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Alerts */}\r\n      <div className=\"card alerts-preview\">\r\n        <div className=\"card__header\">\r\n          <h3>Recent Safety Alerts</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"alerts-list\">\r\n            {recentAlerts.map(alert => (\r\n              <div key={alert.id} className={`alert-item ${alert.type.toLowerCase()}`}>\r\n                <div className=\"alert-content\">\r\n                  <h4>{alert.type} Alert</h4>\r\n                  <p>{alert.message}</p>\r\n                </div>\r\n                <div className=\"alert-time\">{alert.time}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst CollisionAvoidance = ({ appData, addAlert }) => {\r\n  const [isCollisionSimulating, setIsCollisionSimulating] = useState(false)\r\n  const [trainDistance, setTrainDistance] = useState(2.5)\r\n  const [collisionStatus, setCollisionStatus] = useState('✅ All trains maintaining safe distance')\r\n  const [trainPositions, setTrainPositions] = useState({\r\n    train1: { left: 50, top: 50 },\r\n    train2: { right: 50, top: 150 }\r\n  })\r\n\r\n  const simulateCollision = () => {\r\n    if (isCollisionSimulating) return\r\n    \r\n    setIsCollisionSimulating(true)\r\n    setCollisionStatus('⚠️ COLLISION RISK DETECTED - Emergency protocols activated')\r\n    \r\n    // Add collision alert\r\n    const collisionAlert = {\r\n      id: Date.now(),\r\n      type: 'Critical',\r\n      message: 'COLLISION IMMINENT - Trains 12951 and 12002 - Emergency brake activated',\r\n      time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\r\n      status: 'Active',\r\n      action: 'Emergency brake activated automatically'\r\n    }\r\n    \r\n    addAlert(collisionAlert)\r\n\r\n    // Simulate collision scenario\r\n    let step = 0\r\n    const interval = setInterval(() => {\r\n      step++\r\n      setTrainPositions(prev => ({\r\n        train1: { ...prev.train1, left: 50 + (step * 15) },\r\n        train2: { ...prev.train2, right: 50 + (step * 15) }\r\n      }))\r\n\r\n      const distance = Math.max(0.1, 2.5 - (step * 0.3))\r\n      setTrainDistance(distance)\r\n\r\n      if (step >= 7) {\r\n        clearInterval(interval)\r\n        activateEmergencyBrake()\r\n      }\r\n    }, 500)\r\n  }\r\n\r\n  const activateEmergencyBrake = () => {\r\n    setCollisionStatus('✅ EMERGENCY BRAKE ACTIVATED - Trains stopped safely')\r\n    setIsCollisionSimulating(false)\r\n    \r\n    // Reset after 3 seconds\r\n    setTimeout(() => {\r\n      resetCollisionSimulation()\r\n    }, 3000)\r\n  }\r\n\r\n  const resetCollisionSimulation = () => {\r\n    setIsCollisionSimulating(false)\r\n    setTrainPositions({\r\n      train1: { left: 50, top: 50 },\r\n      train2: { right: 50, top: 150 }\r\n    })\r\n    setTrainDistance(2.5)\r\n    setCollisionStatus('✅ All trains maintaining safe distance')\r\n  }\r\n\r\n  // Update train positions randomly when not simulating\r\n  useEffect(() => {\r\n    if (!isCollisionSimulating) {\r\n      const interval = setInterval(() => {\r\n        setTrainPositions(prev => ({\r\n          train1: {\r\n            left: Math.max(20, Math.min(200, prev.train1.left + (Math.random() - 0.5) * 20)),\r\n            top: Math.max(20, Math.min(250, prev.train1.top + (Math.random() - 0.5) * 20))\r\n          },\r\n          train2: {\r\n            right: Math.max(20, Math.min(200, prev.train2.right + (Math.random() - 0.5) * 20)),\r\n            top: Math.max(20, Math.min(250, prev.train2.top + (Math.random() - 0.5) * 20))\r\n          }\r\n        }))\r\n        \r\n        setTrainDistance((Math.random() * 3 + 1.5).toFixed(1))\r\n      }, 3000)\r\n\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [isCollisionSimulating])\r\n\r\n  return (\r\n    <div className=\"collision-grid\">\r\n      <div className=\"card\">\r\n        <div className=\"card__header\">\r\n          <h3>Train Proximity Monitor</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"proximity-map\">\r\n            <div \r\n              className=\"train-tracker\" \r\n              id=\"train1\"\r\n              style={{ \r\n                left: `${trainPositions.train1.left}px`, \r\n                top: `${trainPositions.train1.top}px` \r\n              }}\r\n            >\r\n              <div className=\"train-dot\">🚄</div>\r\n              <span className=\"train-label\">Rajdhani (12951)</span>\r\n            </div>\r\n            <div \r\n              className=\"train-tracker\" \r\n              id=\"train2\"\r\n              style={{ \r\n                right: `${trainPositions.train2.right}px`, \r\n                top: `${trainPositions.train2.top}px` \r\n              }}\r\n            >\r\n              <div className=\"train-dot\">🚄</div>\r\n              <span className=\"train-label\">Shatabdi (12002)</span>\r\n            </div>\r\n            <div className={`collision-zone ${isCollisionSimulating ? 'active' : ''}`}></div>\r\n          </div>\r\n          <div className=\"collision-controls\">\r\n            <button \r\n              className=\"btn btn--secondary\" \r\n              onClick={simulateCollision}\r\n              disabled={isCollisionSimulating}\r\n            >\r\n              Simulate Collision Scenario\r\n            </button>\r\n            <button \r\n              className=\"btn btn--primary\" \r\n              onClick={activateEmergencyBrake}\r\n            >\r\n              Emergency Brake\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card__header\">\r\n          <h3>Collision Alert System</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className={`collision-status ${isCollisionSimulating ? 'alert-flash' : ''}`}>\r\n            <div className={isCollisionSimulating ? 'status--error' : 'status--success'}>\r\n              {collisionStatus}\r\n            </div>\r\n          </div>\r\n          <div className=\"collision-details\">\r\n            <div className=\"detail-item\">\r\n              <span>Distance Between Trains:</span>\r\n              <span>{trainDistance} km</span>\r\n            </div>\r\n            <div className=\"detail-item\">\r\n              <span>Safety Threshold:</span>\r\n              <span>1.0 km</span>\r\n            </div>\r\n            <div className=\"detail-item\">\r\n              <span>Response Time:</span>\r\n              <span>2.3s</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollisionAvoidance\r\n","import React, { useState, useRef } from 'react'\nimport jsPDF from 'jspdf'\nimport html2canvas from 'html2canvas'\n\nconst TrackDetection = ({ appData, addAlert }) => {\n  const [analysisResults, setAnalysisResults] = useState(null)\n  const [isAnalyzing, setIsAnalyzing] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n  const [modalData, setModalData] = useState(null)\n  const [isPdfLoading, setIsPdfLoading] = useState(false)\n  const reportRef = useRef(null)\n\n  const exportAsPDF = () => {\n    setIsPdfLoading(true);\n    \n    setTimeout(() => {\n      if (analysisResults) {\n        const pdf = new jsPDF('p', 'mm', 'a4');\n        const content = document.createElement('div');\n        \n        // Determine status text based on defect type\n        const statusText = analysisResults.defect && analysisResults.defect.type ? \n          `${analysisResults.defect.type.toUpperCase()} DETECTED` : 'NONE DETECTED';\n        \n        // Determine status color based on defect type/severity\n        let statusColor = '#2e7d32'; // Default green for no defects\n        if (analysisResults.defect) {\n          if (analysisResults.defect.severity === 'critical') {\n            statusColor = '#d32f2f'; // Red for critical\n          } else if (analysisResults.defect.severity === 'high') {\n            statusColor = '#f57c00'; // Orange for high\n          } else if (analysisResults.defect.severity === 'medium') {\n            statusColor = '#fbc02d'; // Yellow for medium\n          }\n        }\n        \n        content.innerHTML = `\n          <div style=\"padding: 20px; font-family: Arial, sans-serif;\">\n            <h2 style=\"color: #2e7d32; text-align: center; font-size: 26px; margin-bottom: 15px;\">Indian Railways Track Inspection Report</h2>\n            <hr style=\"border-top: 2px solid #2e7d32; margin-bottom: 20px;\">\n            \n            <div style=\"background-color: #f5f5f5; border-radius: 8px; padding: 15px; margin-bottom: 20px;\">\n              <h3 style=\"font-size: 22px; margin-top: 0; margin-bottom: 15px; color: #333;\">Analysis Results</h3>\n              \n              <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;\">\n                <span style=\"font-size: 18px; font-weight: bold; color: ${statusColor};\">${statusText}</span>\n                <span style=\"background: #5c6bc0; color: white; padding: 5px 10px; border-radius: 15px; font-size: 16px;\">${analysisResults.confidence}% confidence</span>\n              </div>\n              \n              <div id=\"image-placeholder\" style=\"margin: 20px 0; text-align: center;\"></div>\n              \n              <div style=\"background-color: white; border-radius: 6px; padding: 15px; margin-top: 15px;\">\n                ${analysisResults.defect ? `\n                <p style=\"font-size: 16px; margin: 10px 0;\"><strong style=\"color: #333;\">Location:</strong> ${analysisResults.defect.location}</p>\n                <p style=\"font-size: 16px; margin: 10px 0;\"><strong style=\"color: #333;\">Description:</strong> ${analysisResults.defect.description}</p>\n                <p style=\"font-size: 16px; margin: 10px 0;\">\n                  <strong style=\"color: #333;\">Severity:</strong> \n                  <span style=\"color: ${statusColor}; font-weight: bold;\">${analysisResults.defect.severity.toUpperCase()}</span>\n                </p>\n                ` : ''}\n                <p style=\"font-size: 16px; margin: 10px 0;\"><strong style=\"color: #333;\">Recommended Action:</strong> ${analysisResults.recommendedAction || (analysisResults.defect ? getRecommendedAction(analysisResults.defect) : 'Continue routine inspection')}</p>\n                ${analysisResults.safetyImplications ? `<p style=\"font-size: 16px; margin: 10px 0;\"><strong style=\"color: #333;\">Safety Implications:</strong> ${analysisResults.safetyImplications}</p>` : ''}\n              </div>\n            </div>\n            \n            <hr style=\"border-top: 1px solid #ccc; margin: 25px 0;\">\n            <p style=\"text-align: center; font-size: 14px; color: #666;\">\n              Generated by Suraksha Portal - Indian Railways Track Monitoring System<br>\n              Date: ${new Date().toLocaleDateString()}<br>\n              Time: ${new Date().toLocaleTimeString()}\n            </p>\n          </div>\n        `;\n        \n        document.body.appendChild(content);\n        \n        // If we have a base64 image from the upload, add it to the report\n        if (analysisResults.imageData) {\n          const imgElement = document.createElement('img');\n          imgElement.src = analysisResults.imageData;\n          imgElement.style.maxWidth = '100%';\n          imgElement.style.maxHeight = '300px';\n          imgElement.style.border = '1px solid #ccc';\n          imgElement.style.borderRadius = '4px';\n          imgElement.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n          content.querySelector('#image-placeholder').appendChild(imgElement);\n        }\n        \n        html2canvas(content).then(canvas => {\n          const imgData = canvas.toDataURL('image/png');\n          const imgWidth = 190;\n          const imgHeight = canvas.height * imgWidth / canvas.width;\n          \n          pdf.addImage(imgData, 'PNG', 10, 10, imgWidth, imgHeight);\n          pdf.save(`track-inspection-report-${new Date().toISOString().slice(0, 10)}.pdf`);\n          \n          document.body.removeChild(content);\n          setIsPdfLoading(false);\n        }).catch(err => {\n          console.error('Error generating PDF:', err);\n          setIsPdfLoading(false);\n          alert('Failed to generate PDF. Please try again.');\n        });\n      } else {\n        setIsPdfLoading(false);\n        alert('No analysis results available to export.');\n      }\n    }, 500);\n  };\n\n  const analyzeSampleImage = (sampleType) => {\n    setIsAnalyzing(true)\n    setAnalysisResults(null)\n\n    setTimeout(() => {\n      // Use a bundled sample image, but generate analysis dynamically (no static defect data)\n      const sampleImagePath = '/assets/indianrailways2_1633326562750_1633326571040.jpeg'\n\n      const img = new Image()\n      img.crossOrigin = 'Anonymous'\n      img.onload = () => {\n        const canvas = document.createElement('canvas')\n        canvas.width = img.width\n        canvas.height = img.height\n        const ctx = canvas.getContext('2d')\n        ctx.drawImage(img, 0, 0)\n\n        const imageData = canvas.toDataURL('image/jpeg')\n        // Use the same flow as uploads: downscale and call Gemini vision\n        downscaleImageForPrompt(imageData).then(async (promptImage) => {\n          try {\n            const result = await analyzeImageWithGemini(promptImage, `sample_${sampleType}.jpg`)\n            result.imageData = imageData\n            setAnalysisResults(result)\n          } catch (e) {\n            const sim = generateEnhancedSimulatedAnalysis(`sample_${sampleType}.jpg`, sampleType)\n            sim.imageData = imageData\n            setAnalysisResults(sim)\n          } finally {\n            setIsAnalyzing(false)\n          }\n        })\n      }\n\n      img.onerror = () => {\n        console.error('Failed to load sample image')\n        const sim = generateEnhancedSimulatedAnalysis(`sample_${sampleType}.jpg`, sampleType)\n        setAnalysisResults(sim)\n        setIsAnalyzing(false)\n      }\n\n      img.src = sampleImagePath\n    }, 800)\n  }\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0]\n    if (file) {\n      // Validate file type\n      if (!file.type.startsWith('image/')) {\n        alert('Please select an image file')\n        return\n      }\n      analyzeUploadedImage(file)\n    }\n  }\n\n  const handleDragOver = (event) => {\n    event.preventDefault()\n    event.currentTarget.classList.add('dragover')\n  }\n\n  const handleDragLeave = (event) => {\n    event.currentTarget.classList.remove('dragover')\n  }\n\n  const handleDrop = (event) => {\n    event.preventDefault()\n    event.currentTarget.classList.remove('dragover')\n    \n    const files = event.dataTransfer.files\n    if (files.length > 0) {\n      const file = files[0]\n      if (!file.type.startsWith('image/')) {\n        alert('Please drop an image file')\n        return\n      }\n      analyzeUploadedImage(file)\n    }\n  }\n\n  const analyzeUploadedImage = async (file) => {\n    setIsAnalyzing(true)\n    setAnalysisResults(null)\n\n    try {\n      // Convert image to base64\n      const base64Image = await convertToBase64(file)\n      // Create a compact representation for LLM prompt\n      const promptImage = await downscaleImageForPrompt(base64Image)\n      \n      // Analyze with Google Gemini (vision-capable)\n      const analysisResult = await analyzeImageWithGemini(promptImage, file.name)\n      \n      // Store the base64 image data in the analysis results\n      analysisResult.imageData = base64Image\n      \n      setAnalysisResults(analysisResult)\n    } catch (error) {\n      console.error('Image analysis failed:', error)\n      // Fallback to enhanced simulated analysis if API fails\n      const enhancedAnalysis = generateEnhancedSimulatedAnalysis(file.name)\n      \n      // Try to still include the image if possible\n      try {\n        const base64Image = await convertToBase64(file)\n        enhancedAnalysis.imageData = base64Image\n      } catch (imgError) {\n        console.error('Failed to convert image to base64:', imgError)\n      }\n      \n      setAnalysisResults(enhancedAnalysis)\n    } finally {\n      setIsAnalyzing(false)\n    }\n  }\n\n  const generateEnhancedSimulatedAnalysis = (filename, hintedType) => {\n    const defectTypes = ['crack', 'obstacle', 'looseBolt', 'joint', 'ballast', 'signal', 'vegetation', 'drainage']\n    const severities = ['critical', 'high', 'medium', 'low']\n    const locations = ['Rail joint at KM 245.7', 'Track section B-4', 'Signal post 156', 'Ballast area near bridge', 'Rail head at curve']\n    \n    const randomDefectType = hintedType && defectTypes.includes(hintedType) ? hintedType : defectTypes[Math.floor(Math.random() * defectTypes.length)]\n    const randomSeverity = severities[Math.floor(Math.random() * severities.length)]\n    const randomLocation = locations[Math.floor(Math.random() * locations.length)]\n    \n    const defect = {\n      type: randomDefectType,\n      severity: randomSeverity,\n      location: randomLocation,\n      description: `AI analysis detected ${randomDefectType} in ${randomLocation}. This requires immediate attention for railway safety.`\n    }\n    \n    const confidence = Math.floor(Math.random() * 20) + 80 // 80-99% confidence\n    \n    return {\n      defect,\n      filename,\n      confidence,\n      recommendedAction: getRecommendedAction(defect),\n      safetyImplications: `This ${randomDefectType} poses ${randomSeverity} risk to train operations and passenger safety.`,\n      aiAnalysis: `Simulated AI Analysis: Detected ${randomDefectType} with ${confidence}% confidence. Location: ${randomLocation}. Severity: ${randomSeverity}. Immediate action required.`,\n      error: 'Using enhanced simulated analysis - API temporarily unavailable'\n    }\n  }\n\n  const convertToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onload = () => resolve(reader.result)\n      reader.onerror = error => reject(error)\n    })\n  }\n\n  const downscaleImageForPrompt = (dataUrl, maxSize = 256) => {\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        const scale = Math.min(maxSize / img.width, maxSize / img.height, 1)\n        const canvas = document.createElement('canvas')\n        canvas.width = Math.max(1, Math.floor(img.width * scale))\n        canvas.height = Math.max(1, Math.floor(img.height * scale))\n        const ctx = canvas.getContext('2d')\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height)\n        // Moderate quality to keep token usage low\n        const small = canvas.toDataURL('image/jpeg', 0.6)\n        resolve(small)\n      }\n      img.onerror = () => resolve(dataUrl)\n      img.src = dataUrl\n    })\n  }\n\n  const analyzeImageWithGemini = async (base64Image, filename) => {\n    // Use provided Gemini API key directly or window.GEMINI_API_KEY override\n    const INLINE_API_KEY = 'AIzaSyBOtiWfltFcpNpEnLZZNYHKeKVhpXKN4k4'\n    const API_KEY = (typeof window !== 'undefined' && window.GEMINI_API_KEY) || INLINE_API_KEY\n\n    if (!API_KEY || API_KEY === 'YOUR_GEMINI_API_KEY_HERE') {\n      throw new Error('Missing Gemini API key. Set window.GEMINI_API_KEY or replace INLINE_API_KEY.')\n    }\n\n    // Gemini 1.5 Flash vision via REST (multimodal)\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${API_KEY}`\n\n    // Extract base64 bytes from data URL\n    const b64 = base64Image.split(',')[1] || base64Image\n\n    const body = {\n      contents: [\n        {\n          parts: [\n            {\n              text: `Analyze the attached railway track image and return ONLY strict JSON with keys: defectType [crack|obstacle|looseBolt|joint|ballast|signal|vegetation|drainage|none], severity [critical|high|medium|low|none], location (short), description (1-2 sentences), recommendedAction (1 sentence), confidence (0-100), safetyImplications (1 sentence). If uncertain, set defectType 'none' with low confidence. Filename: ${filename}`\n            },\n            {\n              inline_data: {\n                mime_type: 'image/jpeg',\n                data: b64\n              }\n            }\n          ]\n        }\n      ],\n      generationConfig: {\n        temperature: 0,\n        maxOutputTokens: 600\n      }\n    }\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n\n    if (!response.ok) {\n      const errorText = await response.text()\n      console.error('Gemini API Error:', errorText)\n      throw new Error(`Gemini request failed: ${response.status} - ${errorText}`)\n    }\n\n    const data = await response.json()\n    const text = data?.candidates?.[0]?.content?.parts?.[0]?.text || ''\n    const cleaned = stripJsonFences(text)\n\n    try {\n      const analysisData = JSON.parse(cleaned)\n      const noneDetected = (analysisData.defectType || '').toLowerCase() === 'none'\n      const defect = noneDetected ? null : {\n        type: analysisData.defectType || 'unknown',\n        severity: analysisData.severity || 'medium',\n        location: analysisData.location || 'Unknown location',\n        description: analysisData.description || 'No description available'\n      }\n      return {\n        defect,\n        filename,\n        confidence: typeof analysisData.confidence === 'number' ? analysisData.confidence : (noneDetected ? 30 : 85),\n        recommendedAction: analysisData.recommendedAction || (noneDetected ? 'Continue routine inspection' : 'Contact maintenance team'),\n        safetyImplications: analysisData.safetyImplications || (noneDetected ? 'Insufficient information to assess risk' : 'Safety assessment required'),\n        aiAnalysis: cleaned\n      }\n    } catch (e) {\n      const defect = {\n        type: 'analysis',\n        severity: 'medium',\n        location: 'Track section',\n        description: cleaned.substring(0, 200) + '...'\n      }\n      return {\n        defect,\n        filename,\n        confidence: 75,\n        recommendedAction: 'Review AI analysis and take appropriate action',\n        safetyImplications: 'AI analysis completed - manual review recommended',\n        aiAnalysis: cleaned\n      }\n    }\n  }\n\n  const stripJsonFences = (text) => {\n    if (!text) return ''\n    // Remove Markdown fences like ```json ... ```\n    const fenced = text.match(/```[\\s\\S]*?```/)\n    const candidate = fenced ? fenced[0].replace(/```json|```/g, '').trim() : text.trim()\n    // If still contains extra prose, attempt to extract the first top-level JSON object\n    const firstBrace = candidate.indexOf('{')\n    const lastBrace = candidate.lastIndexOf('}')\n    if (firstBrace !== -1 && lastBrace !== -1 && lastBrace > firstBrace) {\n      return candidate.slice(firstBrace, lastBrace + 1)\n    }\n    return candidate\n  }\n\n  const generateMaintenanceAlert = (location) => {\n    const maintenanceAlert = {\n      id: Date.now(),\n      type: 'Warning',\n      message: `Maintenance required at ${location} - Defect detected by AI system`,\n      time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\n      status: 'Active',\n      action: 'Maintenance team notified'\n    }\n\n    addAlert(maintenanceAlert)\n    alert('Maintenance alert generated and sent to dispatch center!')\n  }\n\n  const getRecommendedAction = (defect) => {\n    const actions = {\n      'crack': 'Immediate track inspection and repair required',\n      'obstacle': 'Emergency clearance operation needed',\n      'looseBolt': 'Schedule maintenance within 24 hours'\n    }\n    return actions[defect.type] || 'Contact maintenance team'\n  }\n\n  const openAnalysisModal = (defectType, filename) => {\n    setModalData({\n      defectType,\n      filename,\n      analysisResults,\n      aiAnalysis: analysisResults?.aiAnalysis\n    })\n    setShowModal(true)\n  }\n  \n  // exportAsPDF function is already defined at the top of the file\n\n  const closeModal = () => {\n    setShowModal(false)\n    setModalData(null)\n  }\n\n  return (\n    <div className=\"detection-grid\">\n      <div className=\"card upload-card\">\n        <div className=\"card__header\">\n          <h3>Track Image Analysis</h3>\n        </div>\n        <div className=\"card__body\">\n          <div \n            className=\"upload-area\"\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            onClick={() => document.getElementById('fileInput').click()}\n            style={{ cursor: 'pointer' }}\n          >\n            <div className=\"upload-content\">\n              <div className=\"upload-icon\">📷</div>\n              <p>Drop track images here or click to browse</p>\n              <input \n                type=\"file\" \n                accept=\"image/*\" \n                onChange={handleFileUpload}\n                style={{ display: 'none' }}\n                id=\"fileInput\"\n              />\n              <span>Click to upload</span>\n            </div>\n          </div>\n          <div className=\"sample-images\">\n            <h4>Sample Images:</h4>\n            <div className=\"sample-grid\">\n              <button \n                className=\"sample-btn\" \n                onClick={() => analyzeSampleImage('crack')}\n                disabled={isAnalyzing}\n              >\n                Track Crack\n              </button>\n              <button \n                className=\"sample-btn\" \n                onClick={() => analyzeSampleImage('obstacle')}\n                disabled={isAnalyzing}\n              >\n                Obstacle\n              </button>\n              <button \n                className=\"sample-btn\" \n                onClick={() => analyzeSampleImage('bolts')}\n                disabled={isAnalyzing}\n              >\n                Loose Bolts\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card analysis-card\">\n        <div className=\"card__header\">\n          <h3>AI Analysis Results</h3>\n        </div>\n        <div className=\"card__body\">\n          <div className=\"analysis-results\">\n            {isAnalyzing ? (\n              <div className=\"loading\">Analyzing image with AI...</div>\n            ) : analysisResults ? (\n              <div className=\"analysis-item animate-in\">\n                <div className=\"analysis-header\">\n                  {analysisResults.defect ? (\n                    <span className=\"defect-type\" style={{ color: 'var(--color-indigo-700)' }}>\n                      {analysisResults.defect.type.toUpperCase()} DETECTED\n                    </span>\n                  ) : (\n                    <span className=\"defect-type\" style={{ color: 'var(--color-green-700)' }}>\n                      NO DEFECTS DETECTED\n                    </span>\n                  )}\n                  <span className=\"confidence-score\" style={{ background: 'var(--color-indigo-600)' }}>\n                    {analysisResults.confidence}% confidence\n                  </span>\n                </div>\n                \n                {/* Display the uploaded image */}\n                {analysisResults.imageData && (\n                  <div className=\"analysis-image\" style={{ marginBottom: '15px', textAlign: 'center' }}>\n                    <img \n                      src={analysisResults.imageData} \n                      alt=\"Analyzed Track Image\" \n                      style={{ \n                        maxWidth: '100%', \n                        maxHeight: '250px', \n                        border: '1px solid #ccc',\n                        borderRadius: '4px'\n                      }} \n                    />\n                  </div>\n                )}\n                \n                {analysisResults.defect ? (\n                  <>\n                    <p><strong>Location:</strong> {analysisResults.defect.location}</p>\n                    <p><strong>Description:</strong> {analysisResults.defect.description}</p>\n                    <p>\n                      <strong>Severity:</strong>{' '}\n                      <span className={`status--${analysisResults.defect.severity === 'critical' ? 'error' : \n                        analysisResults.defect.severity === 'high' ? 'warning' : 'info'}`}>\n                        {analysisResults.defect.severity.toUpperCase()}\n                      </span>\n                    </p>\n                  </>\n                ) : (\n                  <>\n                    <p><strong>Description:</strong> No specific defect indicated by filename/context.</p>\n                  </>\n                )}\n                <p><strong>Recommended Action:</strong> {analysisResults.recommendedAction || (analysisResults.defect ? getRecommendedAction(analysisResults.defect) : 'Continue routine inspection')}</p>\n                {analysisResults.safetyImplications && (\n                  <p><strong>Safety Implications:</strong> {analysisResults.safetyImplications}</p>\n                )}\n                {analysisResults.error && (\n                  <p className=\"error-message\">⚠️ {analysisResults.error}</p>\n                )}\n                <div className=\"analysis-actions\">\n                  {analysisResults.defect && (\n                    <button \n                      className=\"btn btn--secondary\"\n                      onClick={() => generateMaintenanceAlert(analysisResults.defect.location)}\n                    >\n                      Send to Maintenance\n                    </button>\n                  )}\n                </div>\n                <div className=\"export-report-container\">\n                  <button \n                    className=\"btn btn--primary export-btn\"\n                    onClick={() => exportAsPDF()}\n                  >\n                    Export Report\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-analysis\">\n                <p>Upload an image or select a sample to see AI detection results</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* PDF Loading Indicator */}\n      {isPdfLoading && (\n        <div className=\"pdf-loading\">\n          <div className=\"loading-spinner\"></div>\n        </div>\n      )}\n      \n      {/* Detailed Report Modal */}\n      {showModal && modalData && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal__header\">\n              <h3>Detailed Analysis Report</h3>\n              <button className=\"modal__close\" onClick={closeModal}>×</button>\n            </div>\n            <div className=\"modal__body\">\n              <div className=\"modal-analysis\" ref={reportRef}>\n                <h4>Analysis Summary</h4>\n                <p><strong>Image:</strong> {modalData.filename}</p>\n                <p><strong>Defect Type:</strong> {modalData.analysisResults?.defect?.type}</p>\n                <p><strong>Severity:</strong> {modalData.analysisResults?.defect?.severity}</p>\n                <p><strong>Location:</strong> {modalData.analysisResults?.defect?.location}</p>\n                <p><strong>Confidence:</strong> {modalData.analysisResults?.confidence}%</p>\n\n                <h5>AI Analysis</h5>\n                {modalData.aiAnalysis ? (\n                  <div className=\"ai-analysis-content\">\n                    <pre style={{ \n                      whiteSpace: 'pre-wrap', \n                      fontFamily: 'var(--font-family-base)', \n                      background: 'var(--color-gray-50)', \n                      padding: 'var(--space-16)', \n                      borderRadius: 'var(--radius-base)',\n                      fontSize: 'var(--font-size-sm)',\n                      lineHeight: 'var(--line-height-relaxed)'\n                    }}>\n                      {modalData.aiAnalysis}\n                    </pre>\n                  </div>\n                ) : (\n                  <p>\n                    No structured AI analysis text was returned.\n                  </p>\n                )}\n                \n                <h5>Maintenance Recommendations:</h5>\n                <p>\n                  {modalData.analysisResults?.recommendedAction || 'Review site and schedule appropriate maintenance.'}\n                </p>\n                \n                <div className=\"modal-actions\">\n                  <button className=\"btn btn--primary\">Generate Work Order</button>\n                  <button className=\"btn btn--secondary\" onClick={exportAsPDF}>Export as PDF</button>\n                  <button className=\"btn btn--secondary\" onClick={closeModal}>Close</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default TrackDetection\n\n","import React, { useState } from 'react'\r\n\r\nconst AlertManagement = ({ appData, addAlert }) => {\r\n  const [filter, setFilter] = useState('all')\r\n  const [isProcessing, setIsProcessing] = useState(false)\r\n\r\n  const filteredAlerts = filter === 'all' \r\n    ? appData.alerts \r\n    : appData.alerts.filter(alert => alert.type.toLowerCase() === filter)\r\n\r\n  const handleAcknowledgeAll = () => {\r\n    setIsProcessing(true)\r\n    \r\n    // Simulate processing delay\r\n    setTimeout(() => {\r\n      // In a real app, this would update the alerts in the backend\r\n      alert('All active alerts have been acknowledged!')\r\n      setIsProcessing(false)\r\n    }, 1500)\r\n  }\r\n\r\n  const handleSendMaintenance = () => {\r\n    setIsProcessing(true)\r\n    \r\n    // Create maintenance alert\r\n    const maintenanceAlert = {\r\n      id: Date.now(),\r\n      type: 'Info',\r\n      message: 'Maintenance team dispatched - All active alerts require attention',\r\n      time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\r\n      status: 'Active',\r\n      action: 'Maintenance team notified and dispatched'\r\n    }\r\n    \r\n    addAlert(maintenanceAlert)\r\n    \r\n    setTimeout(() => {\r\n      alert('Maintenance team has been notified and dispatched!')\r\n      setIsProcessing(false)\r\n    }, 1000)\r\n  }\r\n\r\n  const handleEmergencyStop = () => {\r\n    if (window.confirm('Are you sure you want to initiate an emergency stop? This will halt all train operations.')) {\r\n      setIsProcessing(true)\r\n      \r\n      // Create emergency stop alert\r\n      const emergencyAlert = {\r\n        id: Date.now(),\r\n        type: 'Critical',\r\n        message: 'EMERGENCY STOP INITIATED - All train operations halted immediately',\r\n        time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\r\n        status: 'Active',\r\n        action: 'Emergency protocols activated - All trains stopped'\r\n      }\r\n      \r\n      addAlert(emergencyAlert)\r\n      \r\n      setTimeout(() => {\r\n        alert('EMERGENCY STOP ACTIVATED! All train operations have been halted.')\r\n        setIsProcessing(false)\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"alerts-grid\">\r\n      <div className=\"card alerts-feed\">\r\n        <div className=\"card__header\">\r\n          <h3>Live Alert Feed</h3>\r\n          <div className=\"alert-filters\">\r\n            <button \r\n              className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\r\n              onClick={() => setFilter('all')}\r\n            >\r\n              All\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${filter === 'critical' ? 'active' : ''}`}\r\n              onClick={() => setFilter('critical')}\r\n            >\r\n              Critical\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${filter === 'warning' ? 'active' : ''}`}\r\n              onClick={() => setFilter('warning')}\r\n            >\r\n              Warning\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"alerts-feed-list\">\r\n            {filteredAlerts.map(alert => (\r\n              <div key={alert.id} className={`alert-item ${alert.type.toLowerCase()} animate-in`}>\r\n                <div className=\"alert-content\">\r\n                  <h4>{alert.type} Alert - ID: {alert.id}</h4>\r\n                  <p>{alert.message}</p>\r\n                  <p><strong>Action:</strong> {alert.action}</p>\r\n                  <div className={`status status--${alert.status.toLowerCase()}`}>\r\n                    {alert.status}\r\n                  </div>\r\n                </div>\r\n                <div className=\"alert-time\">{alert.time}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card alert-actions\">\r\n        <div className=\"card__header\">\r\n          <h3>Response Actions</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              className=\"btn btn--lg btn--primary\" \r\n              onClick={handleAcknowledgeAll}\r\n              disabled={isProcessing}\r\n            >\r\n              {isProcessing ? 'Processing...' : 'Acknowledge All'}\r\n            </button>\r\n            <button \r\n              className=\"btn btn--lg btn--secondary\" \r\n              onClick={handleSendMaintenance}\r\n              disabled={isProcessing}\r\n            >\r\n              {isProcessing ? 'Sending...' : 'Send Maintenance'}\r\n            </button>\r\n            <button \r\n              className=\"btn btn--lg status--warning\" \r\n              onClick={handleEmergencyStop}\r\n              disabled={isProcessing}\r\n            >\r\n              {isProcessing ? 'Processing...' : 'Emergency Stop'}\r\n            </button>\r\n          </div>\r\n          <div className=\"response-stats\">\r\n            <div className=\"stat\">\r\n              <span className=\"stat-value\">2.3s</span>\r\n              <span className=\"stat-label\">Avg Response Time</span>\r\n            </div>\r\n            <div className=\"stat\">\r\n              <span className=\"stat-value\">98.5%</span>\r\n              <span className=\"stat-label\">Alert Resolution Rate</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertManagement\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst Controller = ({ appData }) => {\r\n  const [systemStatus, setSystemStatus] = useState({\r\n    aiDetection: 'Online',\r\n    collisionAvoidance: 'Active',\r\n    trackMonitoring: 'Warning',\r\n    alertSystem: 'Operational'\r\n  })\r\n\r\n  const [controlStates, setControlStates] = useState({\r\n    systemStart: 'Start System',\r\n    systemPause: 'Pause Monitoring',\r\n    emergencyStop: 'Emergency Stop'\r\n  })\r\n\r\n  const handleControlAction = (action) => {\r\n    setControlStates(prev => ({\r\n      ...prev,\r\n      [action]: 'Processing...'\r\n    }))\r\n\r\n    setTimeout(() => {\r\n      switch(action) {\r\n        case 'systemStart':\r\n          setControlStates(prev => ({\r\n            ...prev,\r\n            [action]: '✅ System Running'\r\n          }))\r\n          break\r\n        case 'systemPause':\r\n          setControlStates(prev => ({\r\n            ...prev,\r\n            [action]: '⏸️ System Paused'\r\n          }))\r\n          break\r\n        case 'emergencyStop':\r\n          setControlStates(prev => ({\r\n            ...prev,\r\n            [action]: '🛑 Emergency Active'\r\n          }))\r\n          break\r\n      }\r\n\r\n      // Reset after 3 seconds\r\n      setTimeout(() => {\r\n        setControlStates(prev => ({\r\n          ...prev,\r\n          [action]: action === 'systemStart' ? 'Start System' :\r\n                   action === 'systemPause' ? 'Pause Monitoring' : 'Emergency Stop'\r\n        }))\r\n      }, 3000)\r\n    }, 1000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (Math.random() > 0.95) {\r\n        const statuses = ['Online', 'Active', 'Operational', 'Warning']\r\n        const randomStatus = statuses[Math.floor(Math.random() * statuses.length)]\r\n        \r\n        setSystemStatus(prev => ({\r\n          ...prev,\r\n          trackMonitoring: randomStatus\r\n        }))\r\n      }\r\n    }, 5000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  const getStatusClass = (status) => {\r\n    switch(status) {\r\n      case 'Online':\r\n      case 'Active':\r\n      case 'Operational':\r\n        return 'status--success'\r\n      case 'Warning':\r\n        return 'status--warning'\r\n      default:\r\n        return 'status--info'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"controller-grid\">\r\n      <div className=\"card control-panel\">\r\n        <div className=\"card__header\">\r\n          <h3>Master Control Panel</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"control-sections\">\r\n            <div className=\"control-section\">\r\n              <h4>System Controls</h4>\r\n              <div className=\"control-buttons\">\r\n                <button \r\n                  className=\"btn btn--primary control-btn\" \r\n                  onClick={() => handleControlAction('systemStart')}\r\n                  disabled={controlStates.systemStart === 'Processing...'}\r\n                >\r\n                  {controlStates.systemStart}\r\n                </button>\r\n                <button \r\n                  className=\"btn btn--secondary control-btn\" \r\n                  onClick={() => handleControlAction('systemPause')}\r\n                  disabled={controlStates.systemPause === 'Processing...'}\r\n                >\r\n                  {controlStates.systemPause}\r\n                </button>\r\n                <button \r\n                  className=\"btn status--warning control-btn\" \r\n                  onClick={() => handleControlAction('emergencyStop')}\r\n                  disabled={controlStates.emergencyStop === 'Processing...'}\r\n                >\r\n                  {controlStates.emergencyStop}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"control-section\">\r\n              <h4>Manual Overrides</h4>\r\n              <div className=\"override-controls\">\r\n                <label className=\"form-label\">Track Section:</label>\r\n                <select className=\"form-control\">\r\n                  <option value=\"A\">Section A</option>\r\n                  <option value=\"B\">Section B</option>\r\n                  <option value=\"C\">Section C</option>\r\n                  <option value=\"D\">Section D</option>\r\n                </select>\r\n                <button className=\"btn btn--outline\">Override Safety</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card system-status\">\r\n        <div className=\"card__header\">\r\n          <h3>System Status Monitor</h3>\r\n        </div>\r\n        <div className=\"card__body\">\r\n          <div className=\"status-indicators\">\r\n            <div className=\"status-item\">\r\n              <span className={`status-dot ${getStatusClass(systemStatus.aiDetection)}`}></span>\r\n              <span>AI Detection Engine</span>\r\n              <span className=\"status-value\">{systemStatus.aiDetection}</span>\r\n            </div>\r\n            <div className=\"status-item\">\r\n              <span className={`status-dot ${getStatusClass(systemStatus.collisionAvoidance)}`}></span>\r\n              <span>Collision Avoidance</span>\r\n              <span className=\"status-value\">{systemStatus.collisionAvoidance}</span>\r\n            </div>\r\n            <div className=\"status-item\">\r\n              <span className={`status-dot ${getStatusClass(systemStatus.trackMonitoring)}`}></span>\r\n              <span>Track Monitoring</span>\r\n              <span className=\"status-value\">{systemStatus.trackMonitoring}</span>\r\n            </div>\r\n            <div className=\"status-item\">\r\n              <span className={`status-dot ${getStatusClass(systemStatus.alertSystem)}`}></span>\r\n              <span>Alert System</span>\r\n              <span className=\"status-value\">{systemStatus.alertSystem}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controller\r\n","import { useState, useEffect, useCallback } from 'react'\n\nconst initialAppData = {\n  trains: [\n    {\"id\": \"12951\", \"name\": \"Rajdhani Express\", \"status\": \"Running\", \"speed\": 110, \"position\": {\"lat\": 28.6139, \"lng\": 77.2090}, \"direction\": \"North\"},\n    {\"id\": \"12002\", \"name\": \"Shatabdi Express\", \"status\": \"Running\", \"speed\": 95, \"position\": {\"lat\": 28.6000, \"lng\": 77.2200}, \"direction\": \"South\"},\n    {\"id\": \"16317\", \"name\": \"Himsagar Express\", \"status\": \"Running\", \"speed\": 85, \"position\": {\"lat\": 28.5950, \"lng\": 77.2150}, \"direction\": \"East\"}\n  ],\n  alerts: [],\n  trackDefects: [],\n  metrics: {\n    activeTrains: 47,\n    safetyAlerts: 12,\n    systemUptime: \"99.7%\",\n    incidentsPrevented: 156,\n    averageResponseTime: \"2.3 seconds\"\n  },\n  sampleImages: []\n}\n\nexport const useAppData = () => {\n  const [appData, setAppData] = useState(initialAppData)\n  const [monitorCount, setMonitorCount] = useState(124567)\n  const [preventedIncidents, setPreventedIncidents] = useState(156)\n\n  const updateMetrics = useCallback(() => {\n    setAppData(prev => ({\n      ...prev,\n      metrics: {\n        ...prev.metrics,\n        activeTrains: Math.max(45, Math.min(50, prev.metrics.activeTrains + (Math.random() > 0.7 ? (Math.random() > 0.5 ? 1 : -1) : 0))),\n        safetyAlerts: Math.max(8, Math.min(15, prev.metrics.safetyAlerts + (Math.random() > 0.8 ? (Math.random() > 0.5 ? 1 : -1) : 0)))\n      }\n    }))\n\n    if (Math.random() > 0.9) {\n      setPreventedIncidents(prev => prev + 1)\n      setAppData(prev => ({\n        ...prev,\n        metrics: {\n          ...prev.metrics,\n          incidentsPrevented: prev.metrics.incidentsPrevented + 1\n        }\n      }))\n    }\n  }, [])\n\n  const addAlert = useCallback((newAlert) => {\n    setAppData(prev => ({\n      ...prev,\n      alerts: [newAlert, ...prev.alerts.slice(0, 9)]\n    }))\n  }, [])\n\n  const generateRandomAlert = useCallback(() => {\n    if (Math.random() > 0.95) {\n      const alertTypes = ['Warning', 'Info']\n      const messages = [\n        'Minor track irregularity detected at KM 234.2',\n        'Maintenance crew deployed to section C-4',\n        'Weather monitoring alert - heavy rain predicted',\n        'Signal system test completed successfully',\n        'Track inspection completed - no issues found'\n      ]\n\n      const newAlert = {\n        id: Date.now(),\n        type: alertTypes[Math.floor(Math.random() * alertTypes.length)],\n        message: messages[Math.floor(Math.random() * messages.length)],\n        time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\n        status: 'Active',\n        action: 'Monitoring'\n      }\n\n      addAlert(newAlert)\n    }\n  }, [addAlert])\n\n  const updateMonitorCount = useCallback(() => {\n    setMonitorCount(prev => prev + Math.floor(Math.random() * 5) + 1)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateMetrics()\n      generateRandomAlert()\n      updateMonitorCount()\n    }, 3000)\n\n    return () => clearInterval(interval)\n  }, [updateMetrics, generateRandomAlert, updateMonitorCount])\n\n  return {\n    appData: {\n      ...appData,\n      monitorCount,\n      preventedIncidents\n    },\n    updateMetrics,\n    addAlert\n  }\n}\n","import React, { useState, useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Dashboard from './components/Dashboard'\r\nimport CollisionAvoidance from './components/CollisionAvoidance'\r\nimport TrackDetection from './components/TrackDetection'\r\nimport AlertManagement from './components/AlertManagement'\r\nimport Controller from './components/Controller'\r\nimport { useAppData } from './hooks/useAppData'\r\n\r\nfunction App() {\r\n  const [currentTab, setCurrentTab] = useState('dashboard')\r\n  const { appData, updateMetrics, addAlert } = useAppData()\r\n\r\n  const tabs = [\r\n    { id: 'dashboard', label: 'Dashboard' },\r\n    { id: 'collision', label: 'Collision Avoidance' },\r\n    { id: 'detection', label: 'Track Detection' },\r\n    { id: 'alerts', label: 'Alert Management' },\r\n    { id: 'controller', label: 'Controller' }\r\n  ]\r\n\r\n  const renderTabContent = () => {\r\n    switch (currentTab) {\r\n      case 'dashboard':\r\n        return <Dashboard appData={appData} updateMetrics={updateMetrics} />\r\n      case 'collision':\r\n        return <CollisionAvoidance appData={appData} addAlert={addAlert} />\r\n      case 'detection':\r\n        return <TrackDetection appData={appData} addAlert={addAlert} />\r\n      case 'alerts':\r\n        return <AlertManagement appData={appData} addAlert={addAlert} />\r\n      case 'controller':\r\n        return <Controller appData={appData} />\r\n      default:\r\n        return <Dashboard appData={appData} updateMetrics={updateMetrics} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header \r\n        appData={appData}\r\n        tabs={tabs}\r\n        currentTab={currentTab}\r\n        onTabChange={setCurrentTab}\r\n      />\r\n\r\n      <main className=\"main-content\">\r\n        <div className=\"container\">\r\n          {renderTabContent()}\r\n        </div>\r\n      </main>\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.jsx'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","Navigation","tabs","currentTab","onTabChange","getTabIcon","tabId","jsx","tab","jsxs","Header","appData","Footer","Dashboard","updateMetrics","recentAlerts","React","alert","CollisionAvoidance","addAlert","isCollisionSimulating","setIsCollisionSimulating","useState","trainDistance","setTrainDistance","collisionStatus","setCollisionStatus","trainPositions","setTrainPositions","simulateCollision","collisionAlert","step","interval","prev","distance","activateEmergencyBrake","resetCollisionSimulation","useEffect","TrackDetection","analysisResults","setAnalysisResults","isAnalyzing","setIsAnalyzing","showModal","setShowModal","modalData","setModalData","isPdfLoading","setIsPdfLoading","reportRef","useRef","exportAsPDF","pdf","jsPDF","content","statusText","statusColor","getRecommendedAction","imgElement","html2canvas","canvas","imgData","imgWidth","imgHeight","err","analyzeSampleImage","sampleType","sampleImagePath","img","imageData","downscaleImageForPrompt","promptImage","result","analyzeImageWithGemini","sim","generateEnhancedSimulatedAnalysis","handleFileUpload","event","file","analyzeUploadedImage","handleDragOver","handleDragLeave","handleDrop","files","base64Image","convertToBase64","analysisResult","error","enhancedAnalysis","imgError","filename","hintedType","defectTypes","severities","locations","randomDefectType","randomSeverity","randomLocation","defect","confidence","resolve","reject","reader","dataUrl","maxSize","scale","small","API_KEY","url","b64","body","response","errorText","data","text","_e","_d","_c","_b","_a","cleaned","stripJsonFences","analysisData","noneDetected","fenced","candidate","firstBrace","lastBrace","generateMaintenanceAlert","location","maintenanceAlert","closeModal","Fragment","_f","_g","_h","AlertManagement","filter","setFilter","isProcessing","setIsProcessing","filteredAlerts","handleAcknowledgeAll","handleSendMaintenance","handleEmergencyStop","emergencyAlert","Controller","systemStatus","setSystemStatus","controlStates","setControlStates","handleControlAction","action","statuses","randomStatus","getStatusClass","status","initialAppData","useAppData","setAppData","monitorCount","setMonitorCount","preventedIncidents","setPreventedIncidents","useCallback","newAlert","generateRandomAlert","alertTypes","messages","updateMonitorCount","App","setCurrentTab","renderTabContent","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2]}